@model Framework.Customer.CustomerModel
@using GoodToCode.Extensions
@using Framework.WebApp
@using Framework.Customer

<div id="section-create" class="section-light">
    <div class="section-contents">
        <form action="~/@(CustomerController.ControllerName)/@(CustomerController.CreateAction)" method="post" class="form-horizontal" role="form">
            <div class="section-header">Create a new Customer</div>
            @Html.AntiForgeryToken()
            <div class="form-group row">
                <div class="col-sm-3">First Name</div>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "Customer first name" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">Last Name</div>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Customer last name", @required = "required" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">Birth Date</div>
                <div class="col-sm-9">
                    @Html.TextBoxFor(m => m.BirthDate, new { @id = "txtBirthDate", @type="date", @class = "form-control BirthDate", @Value = Model.BirthDate == Defaults.Date ? Defaults.String : Model.BirthDate.ToString("MM/dd/yyyy"), @placeholder = "MM/DD/YYYY" })
                    @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-3">Gender</div>
                <div class="col-sm-9">
                    @Html.DropDownListFor(m => m.GenderId,
             new SelectList(GenderList.GetAll(), "Key", "Value", Model.GenderId), new { @class = "form-control" })
                </div>
            </div>
            <button type="button" id="btnSearch" class="btn btn-primary" onclick="window.location.href='@Url.Action(CustomerSearchController.SearchAction, CustomerSearchController.ControllerName)'">Back to Search</button>
            <button type="submit" class="btn btn-primary">Create Customer</button>
        </form>
        <div class="row">
            <div class="col-xs-offset-1 col-xs-10 ">
                @if (!ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary(false, "Action resulted in...", new { @class = "text-danger" })
                }
                else
                {
                    <p class="text-info">@TempData[CustomerController.ResultMessage]</p>
                }
            </div>
        </div>
    </div>
</div>